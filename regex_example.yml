---
- name: simple regex example
  hosts: localhost
  connection: local
  vars:
    string1: |
      Network		next hop	metric	locperf	weight
      *>e8.8.4.0/24	8.8.8.8 	0 	0	11323 ?
      *>e9.9.9.1/22	8.8.8.8 	0 	0	12323 ?
      *>i7.7.7.2/22	8.8.8.8 	0	0	12323 ?
    string2: |
     17 accepted prefixes (17 paths), consuming 4080 bytes of memory
     0 received prefixes treated as withdrawn
     2448 sent prefixes (2448 paths)
    string3: "BGP neighbor is 10.46.118.137, remote AS 65526, ebgp link, Peer index 8"
    string4: "SSCatdCONpr05 - RMMÃ¢\\x80"
    string5: "lol-hi-omg"
    list1: ["lol", "wtf"]
  tasks:
    - name: initialize routed network list
      ansible.builtin.set_fact:
        routed_networks: []

    - name: collect networks from output
      ansible.builtin.set_fact:
        routed_networks: "{{ routed_networks + [_temp_item] }}"
      loop: "{{ string1.split('\n') }}"
      when: _temp_item != ""
      vars:
        _temp_item: "{{ item | regex_search('\\b.*(?:[0-9]{1,3}\\.){3}[0-9]{1,3}/([1-9][1-9])\\b') }}"

    - name: show routed networks
      ansible.builtin.debug:
        msg: "{{ routed_networks }}"
  
    - name: Create local temporary folder
      ansible.builtin.tempfile:
        state: directory
        suffix: "lol"
      register: nxos_local_pre_post_check_dir
      delegate_to: localhost

    - name: Create local temporary results file 
      ansible.builtin.tempfile:
        state: file
        path: "{{ nxos_local_pre_post_check_dir.path }}"
        suffix: "lol"
      register: nxos_local_pre_post_check_file
      delegate_to: localhost
    
    - name: append results
      ansible.builtin.blockinfile:
        path: "{{ nxos_local_pre_post_check_file.path }}"
        block: "{{ item }}"
        marker: "#  ANSIBLE MANAGED BLOCK command"
      loop: "{{ string1.split('\n') }}"
    
    - name: collect counts
      ansible.builtin.set_fact:
        accepted_prefix: "{{ (item | regex_search('([0-9]+) accepted prefixes', '\\1'))[0] }}"
      loop: "{{ string2.split('\n') }}"
      when: item | regex_search('\\b.*(accepted prefixes)\\b') is not none
    
    - name: collect counts other
      ansible.builtin.set_fact:
        accepted_prefix2: "{{ _temp_item[0] }}"
      loop: "{{ string2.split('\n') }}"
      when: _temp_item != ""
      vars:
        _temp_item: "{{ (item | regex_search('([0-9]+) accepted prefixes', '\\1')) }}"

    - name: show counts
      ansible.builtin.debug:
        msg: "{{ accepted_prefix2 }}"
    
    - name: regex AS number
      ansible.builtin.set_fact:
        as_number: "{{ (string3 | regex_search ('remote AS ([0-9]+)', '\\1')) }}"
    
    - name: show AS number
      ansible.builtin.debug:
        msg: "{{ as_number }}"
    
    - name: string with ctrl chars
      command:
        cmd: echo "{{ string4 }}"

    - name: string in list of strings
      ansible.builtin.debug:
        msg: "{{ string5[:3] in list1 }}"
...
